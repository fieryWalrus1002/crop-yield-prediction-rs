"0","# LASSO regression with glmnet"
"0","#####################################################################################################"
"0","# import the data"
"0","drybean <- read.csv(""Bean_Othello_Jul21_M10_transparent_reflectance_hyperindices.csv"") %>% na.omit()"
"0",""
"0","# predicting YIELD"
"0","drybean.sub <- drybean %>%"
"0","  select(kgha, ends_with(""_mean"")) %>%"
"0","  na.omit()"
"0",""
"0","# # where are the coefficients NA. We will remove these from the model"
"0","drybean.sub <- drybean.sub %>% select(-c(X9_mean, X18_mean, X19_mean, X27_mean,"
"0","                                            X28_mean,  X29_mean, X36_mean,  X37_mean, X38_mean,"
"0","                                            X39_mean, X45_mean,  X46_mean, X47_mean,  X48_mean,"
"0","                                            X49_mean,  X54_mean, X55_mean,  X56_mean, X57_mean,"
"0","                                            X58_mean, X59_mean,  X63_mean, X64_mean,  X65_mean,"
"0","                                            X66_mean,  X67_mean, X68_mean,  X69_mean, X72_mean,"
"0","                                            X73_mean, X74_mean,  X75_mean, X76_mean,  X77_mean,"
"0","                                            X78_mean,  X79_mean, X81_mean, X82_mean,  X83_mean,"
"0","                                            X84_mean, X85_mean, X86_mean,  X87_mean, X88_mean,"
"0","                                            X89_mean))"
"0",""
"0",""
"0","# # Split the data into training and test set"
"0","set.seed(123)"
"0",""
"0","training.samples <- drybean.sub$kgha %>%"
"0","  createDataPartition(p = 0.8, list = FALSE)"
"0",""
"0","train.data  <- as.matrix(drybean.sub[training.samples, ])"
"0","train.x <- train.data[,2:ncol(train.data)]"
"0","train.y <- train.data[,1]"
"0",""
"0","test.data <- as.matrix(drybean.sub[-training.samples, ])"
"0","test.x <- test.data[,2:ncol(test.data)]"
"0","test.y <- test.data[,1]"
"0",""
"0",""
"0","# LASSO regression model, Least Absolutel Shrinkage and Selection Operator"
"0","# in the glmnet library"
"0","lambda_seq <- 10^seq(2, -2, by = -.1)"
"0",""
"0",""
"0","# cvfit <- cv.glmnet(, alpha = 1, lambda = lambda_seq,"
"0","#                        nfolds = 10)"
"0","cvfit <- cv.glmnet(train.x, train.y, type.measure = ""mse"", nfolds = 20)"
"0",""
"0",""
"0","best_lam <- cvfit$lambda.min"
"0","best_lam"
"1","[1]"
"1"," 25.8951"
"1","
"
"0","# build the model with the best lambda value"
"0","lasso_best <- glmnet(train.x, train.y, alpha = 1, lambda = best_lam)"
"0",""
"0","# make predictions"
"0","pred <- predict(lasso_best, s = best_lam, newx = test.x)"
"0","final <- cbind(test.y, pred)"
"0",""
"0","# check the first few"
"0","head(final)"
"1","  "
"1"," test.y"
"1","        1"
"1","
5 "
"1"," 3269.2"
"1"," 4154.759"
"1","
8 "
"1"," 4838.5"
"1"," 4478.994"
"1","
15"
"1"," 4160.1"
"1"," 3463.785"
"1","
33"
"1"," 3679.5"
"1"," 3823.333"
"1","
41"
"1"," 4272.9"
"1"," 4305.742"
"1","
44"
"1"," 4019.4"
"1"," 4290.361"
"1","
"
"0","# # compute R MSE"
"0","RMSE <- RMSE(pred, test.y)"
"0",""
"0","# "
"0","# # compute R-square"
"0","R2 <- R2(pred, test.y)"
"0",""
"0","# return results"
"0","print(paste(""RMSE = "", RMSE))"
"1","[1]"
"1"," ""RMSE =  515.758459807275"""
"1","
"
"0","print(paste(""R-squared value is:"", R2))"
"1","[1]"
"1"," ""R-squared value is: 0.219827238383539"""
"1","
"
"0","# inspect the coefficients"
"0","coef(lasso_best)"
"1","46 x 1 sparse Matrix of class ""dgCMatrix""
"
"1","           "
"1","          s0"
"1","
(Intercept)"
"1"," -13294.6337"
"1","
X0_mean    "
"1","      .     "
"1","
X1_mean    "
"1","      .     "
"1","
X2_mean    "
"1","      .     "
"1","
X3_mean    "
"1","   4338.7365"
"1","
X4_mean    "
"1","      .     "
"1","
X5_mean    "
"1","      .     "
"1","
X6_mean    "
"1","      .     "
"1","
X7_mean    "
"1","      .     "
"1","
X8_mean    "
"1","      .     "
"1","
X10_mean   "
"1","      .     "
"1","
X11_mean   "
"1","      .     "
"1","
X12_mean   "
"1","      .     "
"1","
X13_mean   "
"1","      .     "
"1","
X14_mean   "
"1"," -21536.5872"
"1","
X15_mean   "
"1","      .     "
"1","
X16_mean   "
"1","      .     "
"1","
X17_mean   "
"1","      .     "
"1","
X20_mean   "
"1","      .     "
"1","
X21_mean   "
"1","   1984.1620"
"1","
X22_mean   "
"1","      .     "
"1","
X23_mean   "
"1","      .     "
"1","
X24_mean   "
"1","      .     "
"1","
X25_mean   "
"1","      .     "
"1","
X26_mean   "
"1","      .     "
"1","
X30_mean   "
"1","      .     "
"1","
X31_mean   "
"1","      .     "
"1","
X32_mean   "
"1","      .     "
"1","
X33_mean   "
"1","      .     "
"1","
X34_mean   "
"1","      .     "
"1","
X35_mean   "
"1","      .     "
"1","
X40_mean   "
"1","  -3628.7031"
"1","
X41_mean   "
"1","      .     "
"1","
X42_mean   "
"1","      .     "
"1","
X43_mean   "
"1","   -773.3544"
"1","
X44_mean   "
"1","      .     "
"1","
X50_mean   "
"1","      .     "
"1","
X51_mean   "
"1","      .     "
"1","
X52_mean   "
"1","      .     "
"1","
X53_mean   "
"1","      .     "
"1","
X60_mean   "
"1","      .     "
"1","
X61_mean   "
"1","      .     "
"1","
X62_mean   "
"1","      .     "
"1","
X70_mean   "
"1","      .     "
"1","
X71_mean   "
"1","      .     "
"1","
X80_mean   "
"1","      .     "
"1","
"
