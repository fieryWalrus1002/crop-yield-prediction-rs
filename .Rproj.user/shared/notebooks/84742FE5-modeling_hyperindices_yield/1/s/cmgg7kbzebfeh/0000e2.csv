"0","# par(mfrow=c(2,2))"
"0","# plot(lm.fit)"
"0",""
"0","# check for normality "
"0","# library(fBasics)"
"0","# library(lmtest)"
"0",""
"0","# jarqueberaTest(lm.fit$residuals)"
"0","# dwtest(lm.fit)"
"0",""
"0","# run a linear model fit and see if there are some really collinear variables"
"0","# due to the nature of the hyperspectral indices, there are many colinear variables"
"0","# present in the dataset. lets remove some of those."
"0","# lm.fit <- lm(kgha ~ ., data = drybean.sub[,2:ncol(drybean.sub)])"
"0","# summary(lm.fit)"
"0",""
"0","# "
"0","# # #"
"0","# library(corrplot)"
"0","# x <-cor(train.data[, 2:ncol(train.data)])"
"0","# print(x)"
"0",""
"0","# # corrplot(x, type=""upper"", order=""hclust"")"
"0","# "
"0",""
"0",""
"0","# correlation plot"
"0","corr <- round(cor(drybean.reduced), 1)"
"0","head(corr[,1:6])"
"1","       "
"1"," kgha"
"1"," X0_mean"
"1"," X1_mean"
"1"," X2_mean"
"1"," X3_mean"
"1"," X4_mean"
"1","
kgha   "
"1","  1.0"
"1","     0.0"
"1","    -0.4"
"1","    -0.4"
"1","     0.5"
"1","     0.3"
"1","
X0_mean"
"1","  0.0"
"1","     1.0"
"1","     0.1"
"1","     0.2"
"1","     0.1"
"1","     0.0"
"1","
X1_mean"
"1"," -0.4"
"1","     0.1"
"1","     1.0"
"1","     1.0"
"1","    -0.1"
"1","     0.3"
"1","
X2_mean"
"1"," -0.4"
"1","     0.2"
"1","     1.0"
"1","     1.0"
"1","    -0.1"
"1","     0.3"
"1","
X3_mean"
"1","  0.5"
"1","     0.1"
"1","    -0.1"
"1","    -0.1"
"1","     1.0"
"1","     0.8"
"1","
X4_mean"
"1","  0.3"
"1","     0.0"
"1","     0.3"
"1","     0.3"
"1","     0.8"
"1","     1.0"
"1","
"
"0","# create a mastrix of correlation p-values"
"0","p.mat <- cor_pmat(drybean.reduced)"
"0",""
"0","ggcorrplot(corr,"
"0","           type=""upper"","
"0","           hc.order = FALSE,"
"0","           outline.col = ""white"", "
"0","           insig=""blank"", title = ""Pearson's correlation among predictor variables"", "
"0","           lab_size= .05,"
"0","           sig.level=0.05, "
"0","           p.mat = p.mat, "
"0","           lab=TRUE,"
"0","           digits=3) +"
"0","    theme(axis.text.x = element_text(size = rel(.751), angle=90),"
"0","                  axis.text.y = element_text(size = rel(.751)),"
"0","          panel.grid.minor = element_line(size=20))"
