"0","# predicting YIELD"
"0","drybean.sub <- drybean %>%"
"0","  select(kgha, ends_with(""_mean"")) %>%"
"0","  na.omit()"
"0",""
"0",""
"0",""
"0",""
"0","# where are the coefficients NA. We will remove these from the model"
"0","drybean.reduced <- drybean.sub %>% select(-c(X9_mean, X18_mean, X19_mean, X27_mean,"
"0","                                            X28_mean,  X29_mean, X36_mean,  X37_mean, X38_mean,"
"0","                                            X39_mean, X45_mean,  X46_mean, X47_mean,  X48_mean,"
"0","                                            X49_mean,  X54_mean, X55_mean,  X56_mean, X57_mean,"
"0","                                            X58_mean, X59_mean,  X63_mean, X64_mean,  X65_mean, "
"0","                                            X66_mean,  X67_mean, X68_mean,  X69_mean, X72_mean, "
"0","                                            X73_mean, X74_mean,  X75_mean, X76_mean,  X77_mean,"
"0","                                            X78_mean,  X79_mean, X81_mean, X82_mean,  X83_mean,"
"0","                                            X84_mean, X85_mean, X86_mean,  X87_mean, X88_mean,"
"0","                                            X89_mean))"
"0",""
"0","# # Split the data into training and test set"
"0","set.seed(123)"
"0","training.samples <- drybean.reduced$kgha %>%"
"0","  createDataPartition(p = 0.8, list = FALSE)"
"0","train.data  <- drybean.reduced[training.samples, ]"
"0","test.data <- drybean.reduced[-training.samples, ]"
"0",""
"0",""
"0","# create a multiple regression model using all predictors"
"0","lm.fit <- lm(kgha ~ ., data = train.data)"
"0","summary(lm.fit)"
"1","
Call:
"
"1",""
"1","lm(formula = kgha ~ ., data = train.data)"
"1",""
"1","

"
"1",""
"1","Residuals:
"
"1","    Min "
"1","     1Q "
"1"," Median "
"1","     3Q "
"1","    Max "
"1","
"
"1","-947.61 "
"1","-132.53 "
"1"," -12.51 "
"1"," 173.86 "
"1"," 691.68 "
"1","
"
"1","
Coefficients:
"
"1","           "
"1"," Estimate"
"1"," Std. Error"
"1"," t value"
"1"," Pr(>|t|)"
"1","
(Intercept)"
"1","   157179"
"1","     121918"
"1","   1.289"
"1","    0.203"
"1","
X0_mean    "
"1","  -453867"
"1","     361220"
"1","  -1.256"
"1","    0.215"
"1","
X1_mean    "
"1","   295953"
"1","    1454791"
"1","   0.203"
"1","    0.840"
"1","
X2_mean    "
"1","  -500843"
"1","    1633927"
"1","  -0.307"
"1","    0.761"
"1","
X3_mean    "
"1","    -7024"
"1","     453398"
"1","  -0.015"
"1","    0.988"
"1","
X4_mean    "
"1","   624247"
"1","     426260"
"1","   1.464"
"1","    0.149"
"1","
X5_mean    "
"1","  -138547"
"1","    1759324"
"1","  -0.079"
"1","    0.938"
"1","
X6_mean    "
"1"," -1790510"
"1","    1168614"
"1","  -1.532"
"1","    0.132"
"1","
X7_mean    "
"1","   859521"
"1","     514231"
"1","   1.671"
"1","    0.101"
"1","
X8_mean    "
"1","  1318968"
"1","    1865750"
"1","   0.707"
"1","    0.483"
"1","
X10_mean   "
"1","  -476026"
"1","    1343307"
"1","  -0.354"
"1","    0.725"
"1","
X11_mean   "
"1","   543134"
"1","    1443057"
"1","   0.376"
"1","    0.708"
"1","
X12_mean   "
"1","  -124594"
"1","     412578"
"1","  -0.302"
"1","    0.764"
"1","
X13_mean   "
"1","  -591957"
"1","     593655"
"1","  -0.997"
"1","    0.324"
"1","
X14_mean   "
"1","   508520"
"1","    1294778"
"1","   0.393"
"1","    0.696"
"1","
X15_mean   "
"1"," -1091472"
"1","     978586"
"1","  -1.115"
"1","    0.270"
"1","
X16_mean   "
"1","   743923"
"1","     563934"
"1","   1.319"
"1","    0.193"
"1","
X17_mean   "
"1","   149194"
"1","    1369142"
"1","   0.109"
"1","    0.914"
"1","
X20_mean   "
"1"," -4517781"
"1","    4411213"
"1","  -1.024"
"1","    0.311"
"1","
X21_mean   "
"1","   303565"
"1","    3234753"
"1","   0.094"
"1","    0.926"
"1","
X22_mean   "
"1","   724684"
"1","    6991596"
"1","   0.104"
"1","    0.918"
"1","
X23_mean   "
"1","   -96384"
"1","    2675026"
"1","  -0.036"
"1","    0.971"
"1","
X24_mean   "
"1","  2401394"
"1","    2656401"
"1","   0.904"
"1","    0.370"
"1","
X25_mean   "
"1","  2073464"
"1","    2310213"
"1","   0.898"
"1","    0.374"
"1","
X26_mean   "
"1","  -211845"
"1","    2720442"
"1","  -0.078"
"1","    0.938"
"1","
X30_mean   "
"1","  1571981"
"1","    3671032"
"1","   0.428"
"1","    0.670"
"1","
X31_mean   "
"1"," -2600598"
"1","    7190883"
"1","  -0.362"
"1","    0.719"
"1","
X32_mean   "
"1"," -1843865"
"1","    3151180"
"1","  -0.585"
"1","    0.561"
"1","
X33_mean   "
"1"," -1479237"
"1","    2714664"
"1","  -0.545"
"1","    0.588"
"1","
X34_mean   "
"1"," -2645863"
"1","    2422333"
"1","  -1.092"
"1","    0.280"
"1","
X35_mean   "
"1","  1528428"
"1","    3286503"
"1","   0.465"
"1","    0.644"
"1","
X40_mean   "
"1","  2019646"
"1","    1215156"
"1","   1.662"
"1","    0.103"
"1","
X41_mean   "
"1","   643891"
"1","    1147970"
"1","   0.561"
"1","    0.577"
"1","
X42_mean   "
"1","   764781"
"1","     982875"
"1","   0.778"
"1","    0.440"
"1","
X43_mean   "
"1","  -874109"
"1","     908377"
"1","  -0.962"
"1","    0.341"
"1","
X44_mean   "
"1","  -789097"
"1","    1111950"
"1","  -0.710"
"1","    0.481"
"1","
X50_mean   "
"1","   761444"
"1","    1435799"
"1","   0.530"
"1","    0.598"
"1","
X51_mean   "
"1","   807865"
"1","    1282844"
"1","   0.630"
"1","    0.532"
"1","
X52_mean   "
"1","  -142504"
"1","    1211529"
"1","  -0.118"
"1","    0.907"
"1","
X53_mean   "
"1"," -1142382"
"1","    1220690"
"1","  -0.936"
"1","    0.354"
"1","
X60_mean   "
"1"," -3886543"
"1","    3000388"
"1","  -1.295"
"1","    0.201"
"1","
X61_mean   "
"1","  2150914"
"1","    1383218"
"1","   1.555"
"1","    0.126"
"1","
X62_mean   "
"1","  1682414"
"1","    1777379"
"1","   0.947"
"1","    0.349"
"1","
X70_mean   "
"1","  -131231"
"1","    1158718"
"1","  -0.113"
"1","    0.910"
"1","
X71_mean   "
"1"," -3160442"
"1","    2756181"
"1","  -1.147"
"1","    0.257"
"1","
X80_mean   "
"1","  1362515"
"1","    1475172"
"1","   0.924"
"1","    0.360"
"1","
"
"1","
Residual standard error:"
"1"," "
"1","361.5"
"1"," "
"1","on"
"1"," "
"1","49"
"1"," "
"1","degrees of freedom"
"1","
"
"1","Multiple R-squared: "
"1"," "
"1","0.7904"
"1",",	Adjusted R-squared: "
"1"," "
"1","0.598"
"1"," "
"1","
F-statistic:"
"1"," "
"1","4.107"
"1"," "
"1","on"
"1"," "
"1","45"
"1"," "
"1","and"
"1"," "
"1","49"
"1"," "
"1","DF,  p-value:"
"1"," "
"1","1.436e-06"
"1","
"
"1","
"
"0","# predict using test data"
"0","predictions <- lm.fit %>% predict(test.data)"
"0",""
"0","# compute R MSE"
"0","RMSE <- RMSE(predictions, test.data$kgha)"
"0",""
"0",""
"0","# compute R-square"
"0","R2 <- R2(predictions, test.data$kgha)"
"0",""
"0","# return results"
"0","print(paste(""RMSE = "", RMSE))"
"1","[1]"
"1"," ""RMSE =  443.021738213052"""
"1","
"
"0","print(paste(""R-squared value is:"", R2))"
"1","[1]"
"1"," ""R-squared value is: 0.443532893589638"""
"1","
"
"0","R2label <- paste(""r^2="", round(R2,4))"
"0",""
"0","# combine the real and predicted values"
"0","lm_yield <- tibble(test.data$kgha, predictions)"
"0","names(lm_yield) <- c(""real_kgha"", ""pred_kgha"")"
"0",""
"0","# make a plot of predictions"
"0","yield_plot <- lm_yield %>% "
"0","  ggplot(aes(x=real_kgha, y=pred_kgha)) + "
"0","  geom_point() +"
"0","  theme_bw() +"
"0","  ggtitle(""lm: real kgha vs predicted kgha"") +"
"0","  ylab(""predicted yield (kgha)"") +"
"0","  xlab(""yield (kgha)"") +"
"0","  annotate(geom=""text"", x=5000, y=5000,size=6, color = ""red"", label=R2label)"
"0",""
"0","yield_plot"
