"0","#####################################################################################################"
"0","# predicting emergence"
"0","drybean.sub <- drybean %>%"
"0","  select(em, ends_with(""_mean"")) %>%"
"0","  na.omit()"
"0",""
"0",""
"0","# where are the coefficients NA. We will remove these from the model"
"0","drybean.reduced <- drybean.sub %>% select(-c(X9_mean, X18_mean, X19_mean, X27_mean,"
"0","                                            X28_mean,  X29_mean, X36_mean,  X37_mean, X38_mean,"
"0","                                            X39_mean, X45_mean,  X46_mean, X47_mean,  X48_mean,"
"0","                                            X49_mean,  X54_mean, X55_mean,  X56_mean, X57_mean,"
"0","                                            X58_mean, X59_mean,  X63_mean, X64_mean,  X65_mean, "
"0","                                            X66_mean,  X67_mean, X68_mean,  X69_mean, X72_mean, "
"0","                                            X73_mean, X74_mean,  X75_mean, X76_mean,  X77_mean,"
"0","                                            X78_mean,  X79_mean, X81_mean, X82_mean,  X83_mean,"
"0","                                            X84_mean, X85_mean, X86_mean,  X87_mean, X88_mean,"
"0","                                            X89_mean))"
"0",""
"0","# run a linear model fit and see if there are some really collinear variables"
"0","# due to the nature of the hyperspectral indices, there are many colinear variables"
"0","# present in the dataset. lets remove some of those."
"0","#lm.fit <- lm(em ~ ., data = drybean.sub[,2:ncol(drybean.sub)])"
"0","#summary(lm.fit)"
"0",""
"0","# # Split the data into training and test set"
"0","set.seed(123)"
"0","training.samples <- drybean.reduced$em %>%"
"0","  createDataPartition(p = 0.8, list = FALSE)"
"0","train.data  <- drybean.reduced[training.samples, ]"
"0","test.data <- drybean.reduced[-training.samples, ]"
"0",""
"0","# create a multiple regression model using all predictors"
"0","lm.fit <- lm(em ~ ., data = train.data)"
"0","summary(lm.fit)"
"1","
Call:
"
"1",""
"1","lm(formula = em ~ ., data = train.data)"
"1",""
"1","

"
"1",""
"1","Residuals:
"
"1","     Min "
"1","      1Q "
"1","  Median "
"1","      3Q "
"1","     Max "
"1","
"
"1","-1.45557 "
"1","-0.30126 "
"1","-0.06232 "
"1"," 0.28997 "
"1"," 1.56938 "
"1","
"
"1","
Coefficients:
"
"1","           "
"1","  Estimate"
"1"," Std. Error"
"1"," t value"
"1"," Pr(>|t|)"
"1","   "
"1","
(Intercept)"
"1","     97.95"
"1","     227.22"
"1","   0.431"
"1","  0.66834"
"1","   "
"1","
X0_mean    "
"1","    952.95"
"1","     708.47"
"1","   1.345"
"1","  0.18492"
"1","   "
"1","
X1_mean    "
"1","  -1220.64"
"1","    2792.29"
"1","  -0.437"
"1","  0.66397"
"1","   "
"1","
X2_mean    "
"1","   -510.53"
"1","    3200.56"
"1","  -0.160"
"1","  0.87393"
"1","   "
"1","
X3_mean    "
"1","    811.85"
"1","    1049.71"
"1","   0.773"
"1","  0.44307"
"1","   "
"1","
X4_mean    "
"1","  -1401.36"
"1","    1000.26"
"1","  -1.401"
"1","  0.16765"
"1","   "
"1","
X5_mean    "
"1","   -858.81"
"1","    3309.80"
"1","  -0.259"
"1","  0.79638"
"1","   "
"1","
X6_mean    "
"1","   3112.09"
"1","    2435.47"
"1","   1.278"
"1","  0.20746"
"1","   "
"1","
X7_mean    "
"1","    278.87"
"1","    1064.11"
"1","   0.262"
"1","  0.79439"
"1","   "
"1","
X8_mean    "
"1","   -610.14"
"1","    3765.88"
"1","  -0.162"
"1","  0.87197"
"1","   "
"1","
X10_mean   "
"1","    806.34"
"1","    2599.42"
"1","   0.310"
"1","  0.75775"
"1","   "
"1","
X11_mean   "
"1","   1535.87"
"1","    2840.54"
"1","   0.541"
"1","  0.59122"
"1","   "
"1","
X12_mean   "
"1","    728.71"
"1","     862.41"
"1","   0.845"
"1","  0.40232"
"1","   "
"1","
X13_mean   "
"1","   -602.07"
"1","    1203.28"
"1","  -0.500"
"1","  0.61911"
"1","   "
"1","
X14_mean   "
"1","  -5129.07"
"1","    2634.96"
"1","  -1.947"
"1","  0.05745"
"1"," . "
"1","
X15_mean   "
"1","  -4041.75"
"1","    2041.61"
"1","  -1.980"
"1","  0.05349"
"1"," . "
"1","
X16_mean   "
"1","   -141.67"
"1","    1055.42"
"1","  -0.134"
"1","  0.89378"
"1","   "
"1","
X17_mean   "
"1","   6819.73"
"1","    2915.13"
"1","   2.339"
"1","  0.02352"
"1"," * "
"1","
X20_mean   "
"1","  -9006.43"
"1","    8278.88"
"1","  -1.088"
"1","  0.28208"
"1","   "
"1","
X21_mean   "
"1","   3220.46"
"1","    6396.20"
"1","   0.503"
"1","  0.61692"
"1","   "
"1","
X22_mean   "
"1","   9194.32"
"1","   13514.21"
"1","   0.680"
"1","  0.49956"
"1","   "
"1","
X23_mean   "
"1","  -1319.17"
"1","    4521.99"
"1","  -0.292"
"1","  0.77176"
"1","   "
"1","
X24_mean   "
"1","  -7648.70"
"1","    4950.03"
"1","  -1.545"
"1","  0.12887"
"1","   "
"1","
X25_mean   "
"1","    457.74"
"1","    3675.33"
"1","   0.125"
"1","  0.90140"
"1","   "
"1","
X26_mean   "
"1","   4091.10"
"1","    4674.78"
"1","   0.875"
"1","  0.38585"
"1","   "
"1","
X30_mean   "
"1"," -11050.36"
"1","    7395.94"
"1","  -1.494"
"1","  0.14169"
"1","   "
"1","
X31_mean   "
"1","  -2173.80"
"1","   13857.30"
"1","  -0.157"
"1","  0.87601"
"1","   "
"1","
X32_mean   "
"1","   8700.62"
"1","    5754.52"
"1","   1.512"
"1","  0.13710"
"1","   "
"1","
X33_mean   "
"1","  -2877.74"
"1","    6052.15"
"1","  -0.475"
"1","  0.63659"
"1","   "
"1","
X34_mean   "
"1","   6457.79"
"1","    4291.70"
"1","   1.505"
"1","  0.13895"
"1","   "
"1","
X35_mean   "
"1","  -5498.95"
"1","    5985.11"
"1","  -0.919"
"1","  0.36281"
"1","   "
"1","
X40_mean   "
"1","  -4109.28"
"1","    2416.87"
"1","  -1.700"
"1","  0.09556"
"1"," . "
"1","
X41_mean   "
"1","   -380.38"
"1","    2187.58"
"1","  -0.174"
"1","  0.86269"
"1","   "
"1","
X42_mean   "
"1","     48.97"
"1","    1799.91"
"1","   0.027"
"1","  0.97841"
"1","   "
"1","
X43_mean   "
"1","  -2969.28"
"1","    1693.09"
"1","  -1.754"
"1","  0.08585"
"1"," . "
"1","
X44_mean   "
"1","    893.61"
"1","    2021.99"
"1","   0.442"
"1","  0.66051"
"1","   "
"1","
X50_mean   "
"1","    498.73"
"1","    2916.92"
"1","   0.171"
"1","  0.86496"
"1","   "
"1","
X51_mean   "
"1","   2476.85"
"1","    2017.43"
"1","   1.228"
"1","  0.22554"
"1","   "
"1","
X52_mean   "
"1","    238.97"
"1","    1954.80"
"1","   0.122"
"1","  0.90321"
"1","   "
"1","
X53_mean   "
"1","  -2330.35"
"1","    2461.82"
"1","  -0.947"
"1","  0.34859"
"1","   "
"1","
X60_mean   "
"1","  15112.30"
"1","    5564.91"
"1","   2.716"
"1","  0.00917"
"1"," **"
"1","
X61_mean   "
"1","  -3629.29"
"1","    2745.97"
"1","  -1.322"
"1","  0.19254"
"1","   "
"1","
X62_mean   "
"1","  -8685.58"
"1","    3152.76"
"1","  -2.755"
"1","  0.00827"
"1"," **"
"1","
X70_mean   "
"1","  -6706.55"
"1","    2497.59"
"1","  -2.685"
"1","  0.00992"
"1"," **"
"1","
X71_mean   "
"1","  14729.18"
"1","    5296.61"
"1","   2.781"
"1","  0.00772"
"1"," **"
"1","
X80_mean   "
"1","  -6605.28"
"1","    3006.45"
"1","  -2.197"
"1","  0.03288"
"1"," * "
"1","
"
"1","---
Signif. codes:  "
"1",""
"1","0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1"
"1","
"
"1","
Residual standard error:"
"1"," "
"1","0.6914"
"1"," "
"1","on"
"1"," "
"1","48"
"1"," "
"1","degrees of freedom"
"1","
"
"1","Multiple R-squared: "
"1"," "
"1","0.7498"
"1",",	Adjusted R-squared: "
"1"," "
"1","0.5151"
"1"," "
"1","
F-statistic:"
"1"," "
"1","3.196"
"1"," "
"1","on"
"1"," "
"1","45"
"1"," "
"1","and"
"1"," "
"1","48"
"1"," "
"1","DF,  p-value:"
"1"," "
"1","5.643e-05"
"1","
"
"1","
"
"0","# predict using test data"
"0","predictions <- lm.fit %>% predict(test.data)"
"0",""
"0","# compute R MSE"
"0","RMSE <- RMSE(predictions, test.data$em)"
"0",""
"0","# compute R-square"
"0","R2 <- R2(predictions, test.data$em)"
"0",""
"0","# return results"
"0","print(paste(""RMSE = "", RMSE))"
"1","[1]"
"1"," ""RMSE =  1.07505091257864"""
"1","
"
"0","print(paste(""R-squared value is:"", R2))"
"1","[1]"
"1"," ""R-squared value is: 0.470482854467782"""
"1","
"
